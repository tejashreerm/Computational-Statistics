Likelihood <- apply(Misval, margin=2, FUN = prod)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likellihood * Prior
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "1", ylab = "Density", xlab = "Kappa", col = "blue")
plot(Values_of_k, Posterior, type = "1", ylab = "Density", xlab = "Kappa", col = "blue")
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
VonMises_dist <- function(k,mu,y){
exp(k*cos(y-mu))/2*pi*besselI(k,nu=0)
}
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39)))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
VonMises_dist <- function(k,mu,y){
exp(k*cos(y-mu))/2*pi*besselI(k,nu=0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39)))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3b
Values_of_k[which.max(Posterior)]
Values_of_k[which.min(Posterior)]
distribution_VonMises <- function(K, y ,mu) # likelihood
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
k_values <- seq(1 ,10 ,by = 0.01) # k imaginary values
misval <- t(sapply(y , FUN = function(X) distribution_VonMises(K = k_values, y = X, mu = 2.39) ))
prior <- dexp(k_values, rate = 1) # Exponential prior with lambda=1 Density function
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(k_values, posterior, type="l", ylab="Density", xlab="k (kappa)",col="red")
#3a
VonMises_dist <- function(k,y,mu){
exp(k*cos(y-mu))/2*pi*besselI(k,nu=0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39)))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(k,y,mu){
exp(k * cos(y - mu))/2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39)))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(k,y,mu){
exp(k * cos(y - mu))/2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(1, 10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39)))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(k,y,mu){
exp(k * cos(y - mu))/2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(1, 10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(k,y,mu)
{
exp(k * cos(y - mu))/2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(1, 10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3b Approximate Posterior mode of k
Values_of_k[which.max(Posterior)]
#3a
VonMises_dist <- function(k,y,mu){
exp(k * cos(y - mu)) / 2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(k,y,mu){
exp(k * cos(y - mu)) / 2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(k=Values_of_k, y=X, mu=2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(k,y,mu){
exp(k * cos(y - mu)) / 2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
distribution_VonMises <- function(K, y ,mu) # likelihood
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
k_values <- seq(1 ,10 ,by = 0.01) # k imaginary values
misval <- t(sapply(y , FUN = function(X) distribution_VonMises(K = k_values, y = X, mu = 2.39) ))
prior <- dexp(k_values, rate = 1) # Exponential prior with lambda=1 Density function
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(k_values, posterior, type="l", ylab="Density", xlab="k (kappa)",col="red")
#3a
VonMises_dist <- function(K,y,mu){
exp(k * cos(y - mu)) / 2 * pi * besselI(k, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
#3a
VonMises_dist <- function(K,y,mu){
exp(k * cos(y - mu)) / 2 * pi * besselI(K, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
#3a
VonMises_dist <- function(K,y,mu){
exp(K * cos(y - mu)) / 2 * pi * besselI(K, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(K,y,mu){
exp(K * cos(y - mu)) / 2 * pi * besselI(K, nu = 0)
}
y <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
#Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
misval1 <- t(sapply(y , FUN = function(X) VonMises_dist(K = k_values, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
#3a
VonMises_dist <- function(K,y,mu){
exp(K * cos(y - mu)) / 2 * pi * besselI(K, nu = 0)
}
y1 <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
#Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
misval1 <- t(sapply(y , FUN = function(X) VonMises_dist(K = k_values, y = X, mu = 2.39) ))
#3a
VonMises_dist <- function(K,y1,mu){
exp(K * cos(y1 - mu)) / 2 * pi * besselI(K, nu = 0)
}
y1 <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
#Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
misval1 <- t(sapply(y1 , FUN = function(X) VonMises_dist(K = k_values, y1 = X, mu = 2.39) ))
#3a
VonMises_dist <- function(K,y1,mu){
exp(K * cos(y1 - mu)) / 2 * pi * besselI(K, nu = 0)
}
y1 <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
#Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
misval1 <- t(sapply(y1 , FUN = function(X) VonMises_dist(K = Values_of_k, y1 = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
#3a
VonMises_dist <- function(K,y1,mu){
exp(K * cos(y1 - mu)) / 2 * pi * besselI(K, nu = 0)
}
y1 <- c(-2.44,2.14,2.54,1.83,2.02,2.33,-2.79,2.23,2.07,2.02)
Values_of_k <- seq(from=1, to=10, by=0.01)
#Misval <- t(sapply(y, FUN=function(X) VonMises_dist(K=Values_of_k, y=X, mu=2.39) ))
misval1 <- t(sapply(y1 , FUN = function(X) VonMises_dist(K = Values_of_k, y1 = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate=1)
Likelihood <- apply(misval1, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type = "l", ylab = "Density", xlab = "Kappa", col = "blue")
distribution_VonMises <- function(K, y ,mu) # likelihood
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
k_values <- seq(1 ,10 ,by = 0.01) # k imaginary values
misval <- t(sapply(y , FUN = function(X) distribution_VonMises(K = k_values, y = X, mu = 2.39) ))
prior <- dexp(k_values, rate = 1) # Exponential prior with lambda=1 Density function
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(k_values, posterior, type="l", ylab="Density", xlab="k (kappa)",col="red")
distribution_VonMises <- function(K, y ,mu) # likelihood
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
k_values <- seq(1 ,10 ,by = 0.01) # k imaginary values
misval <- t(sapply(y , FUN = function(X) distribution_VonMises(K = k_values, y = X, mu = 2.39) ))
prior <- dexp(k_values, rate = 1) # Exponential prior with lambda=1 Density function
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(k_values, posterior, type="l", ylab="Density", xlab="k (kappa)",col="red")
VonMises_dist <- function(K, y ,mu) # likelihood
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
k_values <- seq(1 ,10 ,by = 0.01) # k imaginary values
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = k_values, y = X, mu = 2.39) ))
prior <- dexp(k_values, rate = 1) # Exponential prior with lambda=1 Density function
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(k_values, posterior, type="l", ylab="Density", xlab="k (kappa)",col="red")
VonMises_dist <- function(K, y ,mu) # likelihood
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
k_values <- seq(1 ,10 ,by = 0.01) # k imaginary values
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = k_values, y = X, mu = 2.39) ))
prior <- dexp(k_values, rate = 1) # Exponential prior with lambda=1 Density function
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(k_values, posterior, type="l", ylab="Density", xlab="k (kappa)",col="blue")
VonMises_dist <- function(K, y ,mu) # likelihood
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
k_values <- seq(1 ,10 ,by = 0.01) # k imaginary values
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = k_values, y = X, mu = 2.39) ))
prior <- dexp(k_values, rate = 1) # Exponential prior with lambda=1 Density function
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(k_values, posterior, type="l", ylab="Density", xlab="kappa",col="blue")
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
prior <- dexp(Values_of_k, rate = 1)
likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- likelihood * prior
plot(Values_of_k, posterior, type="l", ylab="Density", xlab="kappa",col="blue")
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(misval, MARGIN = 2, FUN = prod)
posterior <- Likelihood * Prior
plot(Values_of_k, posterior, type="l", ylab="Density", xlab="kappa",col="blue")
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type="l", ylab="Density", xlab="kappa",col="blue")
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type="l", ylab="Density", xlab="kappa")
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type="l", ylab="Density", xlab="kappa", col = "blue")
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
Misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
plot(Values_of_k, Posterior, type="l", ylab="Density", xlab="kappa", col = "blue")
#3b Approximate Posterior mode of k
Values_of_k[which.max(Posterior)]
?plot
#3a
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
Misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
#Plot of posterior distribution of K for the wind direction data over a fine grid of K values
plot(Values_of_k, Posterior, type="l", main="posterior distribution of K for the wind direction
data over a fine grid of K values", ylab="Density", xlab="kappa", col = "blue")
#3a
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
Misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
#Plot of posterior distribution of K for the wind direction data over a fine grid of K values
plot(Values_of_k, Posterior, type="l", main="Posterior distribution of K for the wind direction
data over K values", ylab="Density", xlab="kappa", col = "blue")
#3a
VonMises_dist <- function(K, y ,mu)
{
exp(K * cos(y - mu)) / (2 * pi * besselI(K, nu = 0))
}
y <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
Values_of_k <- seq(1 ,10 ,by = 0.01)
Misval <- t(sapply(y , FUN = function(X) VonMises_dist(K = Values_of_k, y = X, mu = 2.39) ))
Prior <- dexp(Values_of_k, rate = 1)
Likelihood <- apply(Misval, MARGIN = 2, FUN = prod)
Posterior <- Likelihood * Prior
#Plot of posterior distribution of K for the wind direction data over a fine grid of K values
plot(Values_of_k, Posterior, type="l", main="Posterior distribution of K for the wind direction
data over K values", ylab="Density", xlab="kappa", cex=0.5, col = "blue")
setwd("C:/Users/TEJASHREE/Desktop/teju/Period 3/Computational Statistics/Labs/Lab01")
knitr::opts_chunk$set(echo = TRUE)
#Using optionsfunction
options(digits = 22)
X<-1/3
Y<-1/4
print(X-Y)
x1 <- 1/3
x2 <- 1/4
if(all.equal((x1-x2),(1/12))){
print("subtraction iscorrect")
}else{
print("subtraction iswrong")
}
options(digits = 22)
X1<-1
Y1<-1/2
print(X1-Y1)
x1 <- 1/3
x2 <- 1/4
if(all.equal((x1-x2),(1/12))){
print("subtraction is correct")
}else{
print("subtraction is wrong")
}
x1 <- 1/3
x2 <- 1/4
if(all.equal((x1-x2),(1/12))){
print("subtraction is correct")
}else{
print("subtraction is wrong")
}
x1 <- 1/3
x2 <- 1/4
if(all.equal((x1-x2),(1/12))){
print("Subtraction is correct")
}else{
print("Subtraction is wrong")
}
e<-10^-15
f <- function(x) {
(((x+e)-(x))/e)
}
f(e)
x=1
f(x)
x=10000
f(x)
x=1
f(x)
x=10000
f(x)
myvar<-function(x){
1/(length(x)-1)*((sum(x^2)- 1/length(x)*(sum(x))^2))
}
?rnorm
x<-rnorm(10000,mean= 10^8,sd=1)#10000 is the sequence of observations i to 1 to 100000
Yi<-c()
for (i in 1:length(x)) {
Yi[i]<-myvar(x[1:i])-var(x[1:i])
}
plot(x=1:length(Yi),y=Yi)
mu<-function(x){
(1/length(x)*sum(x))
}
#calculate thevariancevalues
myvar2<-function(x){
1/length(x)*sum((x-mu(x))^2)
}
#variance estimatorminusinbuiltfunctionvar()inR
Yi2<-c()
for (i in 1:length(x)) {
Yi2[i]<-myvar2(x[1:i])-var(x[1:i])
}
#plot
plot(x=1:length(Yi2),y=Yi2, ylim=c(1,10000))
library(dplyr)
library(ggplot2)
library(readr)
#Reading thefiletecatorintoR
tecator<-read.csv("tecator.csv")
library(dplyr)
library(ggplot2)
library(readr)
#Reading thefiletecatorintoR
tecator<-read.csv("tecator.csv")
#matrix Xaretheobservationsoftheabsorbancerecords,levelsofmoistureandfat
X<-tecator[,c(2:102,104)]#X
X<-as.matrix(X)#Because wearemultiplyingmatrixsoweneedtopassthedataframeintoas.matrix
#y aretheproteinlevelsinvector
y<-tecator[,c(103)]
#Transpose XT
XT<-t(X)
#A =XTX
A <- XT%*%X
#b =XTy
b<-XT%*%y
#matrix Xaretheobservationsoftheabsorbancerecords,levelsofmoistureandfat
X<-tecator[,c(2:102,104)]#X
X<-as.matrix(X)#Because wearemultiplyingmatrixsoweneedtopassthedataframeintoas.matrix
#y aretheproteinlevelsinvector
y<-tecator[,c(103)]
#Transpose XT
XT<-t(X)
#A =XTX
A <- XT%*%X
#b =XTy
b<-XT%*%y
solve(A,b)
solve(A,b)
solve(A,b)
condition_number<-kappa(A)
condition_number
#scaleing thedata
# 2step-matrixXaretheobservationsoftheabsorbancerecords,levelsofmoistureandfat
X<-tecator[,c(2:102,104)]#X scaled
X_s<-scale(X)
X_s<-as.matrix(X_s)
# yaretheproteinlevels-scaled
y<-tecator[,c(103)]#Y isavectorwithonecoloum
y_s<-scale(y)
#Transpose XT-scaled
XT_s<-t(X_s)
#A =XTX
A_s <- XT_s%*%X_s
#b =XTy
b_s<- XT_s%*%y_s
#3 solve()function
#solve(A_s,b_s)
#4step conditionnumberkappa()withscaleddata
condition_number_s<-kappa(A_s)
condition_number_s
